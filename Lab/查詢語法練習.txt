/****** SSMS 中 SelectTopNRows 命令的指令碼  ******/
/* 010 
  確定打開的是 Northwind 資料庫 */
use Northwind
go

/* 110 
  請寫一道指令, 列出:
  products 資料表的所有產品資料
 */ 
 select *from Products


/* 120 
  請寫一道指令. 列出:
  products 資料表的所有產品, 條列資料時, 請列出以下欄位:
  ProductID, ProductName, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel
 */ 
 select  ProductID
 , ProductName
 , UnitPrice
 , UnitsInStock
 , UnitsOnOrder
 , ReorderLevel from Products


/* 130 
  請寫一道指令, 列出:
  products 資料表 "庫存量低於再訂購量" 的產品資料, 條列資料時, 
  請列出以下欄位:
  ProductID, ProductName, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel
  ----------------------------------------------------------------------------------
  加入where條件句
 */ 
  select ProductID
  , ProductName
  , UnitPrice
  , UnitsInStock
  , UnitsOnOrder
  , ReorderLevel
   from Products 
   where  UnitsInStock< ReorderLevel


/* 140 
  請寫一道指令, 列出:
  products 資料表 (庫存量 + 訂購中數量) 低於再訂購量的產品資料, 條列資料時, 
  請列出以下欄位:
  ProductID, ProductName, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel
  -------------------------------------------------
  加入where條件句
 */ 

   select ProductID
  , ProductName
  , UnitPrice
  , UnitsInStock
  , UnitsOnOrder
  , ReorderLevel
   from Products 
   where  UnitsInStock+ UnitsOnOrder< ReorderLevel




/* 150 
  請寫一道指令, 列出:
  products 資料表 "庫存量低於再訂購量" 的產品資料, 條列資料時, 
  請列出以下欄位
  SupplierID, ProductID, ProductName, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel
  並且, 相同供應商代號(SupplierID)的產品請排在一起
  ----------------------------------------------------------
  (加入order by 依照欄位的值相同的值排在一起)
  加入 distinct 資料表的欄位值都相同只列出一筆
 */ 

 select  distinct SupplierID
 , ProductID 
 , ProductName 
 , UnitPrice
 , UnitsInStock
 , UnitsOnOrder
 , ReorderLevel 
 from  products 
 where  UnitsInStock<ReorderLevel 
 order by SupplierID



/* 160 
  請寫一道 指令 列出:
  products table 產品名稱以 C 開頭的資料
  ------------------------------------------------
  where ProductName like 'c%'  ->c開頭
  where ProductName like '%c'  ->c結尾
  where ProductName like '%c%' ->c結尾 c開頭
  -------------------------------------------------
  where ProductName like '%[cb]%' c或b結尾 c或b開頭
  where ProductName like '%[a-d]%' a~d的都有
 */ 
 select *from Products where ProductName like '[c]%'

/* 170 
  請寫一道指令, 列出:
  products 資料表之類別編號(CategoryID)為 1, 4, 8 的產品資料
  排序時, 請按"類別編號"排序, 相同類別編號的產品按產品名稱(ProductName)排列
  --------------------------------------------------------------------------
  where中加入in('1','4','8')為一個群組的概念
 */ 

 select *from Products
 where CategoryID in('1','4','8')
 order by SupplierID,ProductName



/* 180 
  請寫一道指令, 列出:
  products 資料表之單價介於 10 到 20 元之間(包含 10, 20)的產品資料
  並且按照單價(UnitPrice)由大到小排序
  ------------------------------------------------------
   where中加入between區間  
   order by加入desc由大到小
 */ 

  select *from Products 
  where UnitPrice 
  between 10 and 20 
  order by UnitPrice desc



/* 190 
  請寫一道指令, 列出:
  products 資料表之所有產品, 條列資料時, 
  請列出以下欄位
  ProductID, ProductName, UnitPrice, 

  不過, 各欄位名稱請用中文顯示:
  產品編號, 產品名稱, 單價
  ---------------------------------------------------------------
  加入 as '自訂名稱'  可改變查詢出來的欄位名稱
 */ 


 select   ProductID as '產品編號'
 , ProductName as ' 產品名稱' 
 , UnitPrice as '單價' 
 , (UnitsInStock* UnitPrice) as '總價'
 from Products
 order by UnitPrice

 /* 210 請列出單價最高的前三項產品。
 ---------------------------------------------------------------------
    TOP 3 列出前三名,但第四名如果跟第三名一樣,不會列出來
    如果加入with ties會增額率取,值相同也列出來
 */
 
  select *from Products

  select  TOP 3 with ties  ProductID as '產品編號'
 , ProductName as ' 產品名稱' 
 , UnitPrice as '單價' 
 from Products
 order by UnitPrice  desc


----------------------------------------------------------------------------------
select  rank() over (order by UnitPrice desc) as '排名', ProductID as '產品編號'
 , ProductName as ' 產品名稱' 
 , UnitPrice as '單價' 
 from Products

 select  dense_rank() over (order by UnitPrice desc) as '排名', ProductID as '產品編號'
 , ProductName as ' 產品名稱' 
 , UnitPrice as '單價' 
 from Products
 /*row_number傳入索引值*/
  select  row_number() over (order by UnitPrice desc) as '排名', ProductID as '產品編號'
 , ProductName as ' 產品名稱' 
 , UnitPrice as '單價' 
 from Products

 select  rank() over (order by UnitPrice desc) as '排名', ProductID as '產品編號'
 , ProductName as ' 產品名稱' 
 , UnitPrice as '單價' 
 from Products

 select  dense_rank() over (order by UnitPrice desc) as '排名', ProductID as '產品編號'
 , ProductName as ' 產品名稱' 
 , UnitPrice as '單價' 
 from Products

 /* 220 請列出產品的平均單價。
-----------------------------------------------------------
     用AVG函數可以來算平均
*/
select AVG(UnitPrice) as '平均單價'from Products

 /* 230 請以類別編號(CategoryID)等於 1, 4, 8 為計算範圍, 計算產品的平均單價。
-----------------------------------------------------------------------
加入  in 分組
*/
select AVG(UnitPrice) as '平均單價'from Products 
where CategoryID in('1','4','8')


/* 240 請列出各類產品的平均單價。
加入group by分組
*/
select CategoryID, AVG(UnitPrice) as '平均單價'
from Products 
group by  CategoryID


/* 250 請列出平均單價最高的前三類產品。

把查詢結果用into變一個新的資料表再做後面的事 同等於having在做的事
select CategoryID, AVG(UnitPrice) as '平均單價'
 into newtable1
from Products
group by  CategoryID 

*/
select CategoryID, AVG(UnitPrice) as '平均單價'
from Products 
group by  CategoryID having AVG(UnitPrice)>50

select  CategoryID, Avg(UnitPrice) as AveragePrice from products
  group by CategoryID
  order by Avg(UnitPrice) desc


/* 310
  請寫一道指令, 列出 products 資料表的以下欄位
  ProductID, ProductName, SupplierID
 */ 
 select ProductID
 ,ProductName
 ,SupplierID 
 from products



/* 320
   同上, 但請一併列出該供應商名稱(CompanyName)、
   聯絡電話(Phone)、聯絡人(ContactName)好嗎?
   另外, 相同供應商的資料請列在一起
   -------------------------------------------------------
   用join .....on 來合併兩個資料表
 */ 
 select ProductID as '產品編號'
 , ProductName as '產品名稱'
 , p.SupplierID as '資料ID'
 , CompanyName as '公司名稱'
 , Phone as '電話'
 , ContactName  as '聯絡人'
  from products as p 
  join suppliers as s
  on p.SupplierID = s.SupplierID
  order by p.SupplierID



/* 330
   我想列出「所有」供應商目前各自提供我們哪些產品資料的對照表,
   目前沒提供我們產品的供應商也要列出

   <note>
   下指令前, 請先執行下列指令:
   -- begin --
   insert into suppliers
     (CompanyName, ContactName, Phone)
      values
     ('Taiwan First', 'A-Ban', '(001) 000-0001')
   -- end --
 */ 




-- (Optional)
-- 340 請列出員工及其員工直屬老闆（ReportsTo）的清單。
select EmployeeID as '員工編號'
, (FirstName + ' ' + LastName) as '員工姓名'
, ReportsTo  as '跟幾號主管報告'
from Employees



/* 410
  請列出各項產品的類別、編號、品名、單價、
  該類產品平均單價、單價與產品平均單價的「價差」。
  ----------------------------------------------------------------------------
  利用子查詢,查詢語法中也有查詢語法
  where CategoryID = o.CategoryID)同一類應該跟同一類比所以多加條件
*/
--起
select *from Products
--承轉合
select CategoryID as '類別'
, ProductID as '編號'
,ProductName as '品名'
,UnitPrice as '單價'
,(select avg(UnitPrice)from Products where CategoryID = o.CategoryID) as '平均單價'
,UnitPrice-(select avg(UnitPrice)from Products)  as '產品平均單價的「價差」'
from Products as o

--另一種解法
select CategoryID
,avg(UnitPrice) as AvgPrice
 from Products
 group by CategoryID

select p.CategoryID
, ProductID
, ProductName
, UnitPrice
, AvgPrice
 from Products as p 
 join (
	select CategoryID
	, avg(UnitPrice) as AvgPrice
    from Products
	 group by CategoryID) as g 
 on g.CategoryID = p.CategoryID



/* 420
   請列出有訂第三類產品的訂單。
*/
select * from orders

select * from [order details]

select * from Products


select OrderID
,ProductID 
from [order details]
 where ProductID in (select ProductID from Products where CategoryID = 3)

select OrderID from [order details]
  where ProductID in (select ProductID from Products where CategoryID = 3)

select * from orders
  where OrderID in 
    (select OrderID from [order details]
      where ProductID in (select ProductID from Products where CategoryID = 3))

/* 430
  請列出賣得最好前三項產品。
*/
select * from products

select * from [order details] 

select ProductID, Sum(Quantity) as SumQty from [order details]
  Group by ProductID
  order by Sum(Quantity) desc

select top 3 ProductID from [order details]
  Group by ProductID
  order by Sum(Quantity) desc

select ProductID, ProductName from products
  where productID in 
   (
     select top 3 ProductID from [order details]
       Group by ProductID
       order by Sum(Quantity) desc
   )



--補充(分組查詢也列出各組的細項)----------------------------------------------------------------------------------

select * from [Order Details] 
  order by OrderID

select OrderID, ProductID, Quantity, sum(Quantity)
  from [Order Details] 
  group by OrderID, ProductID, Quantity with rollup
  order by OrderID


  select OrderID, ProductID, Quantity, sum(Quantity)
  from [Order Details] 
  group by OrderID, ProductID, Quantity with cube
  order by OrderID

--補充join多個資料表--------------------------------------------------------------------
 select * from Customers

select CustomerID
,CompanyName 
 from Customers

select 
c.CustomerID
,CompanyName
,orderID
from Customers as c 
join Orders as o 
on o.CustomerID = c.CustomerID

select * from orders
select * from [Order Details]

select c.CustomerID, CompanyName, o.orderID, ProductID
  from Customers as c join Orders as o on o.CustomerID = c.CustomerID
                      join [Order Details] od on od.OrderID = o.OrderID
  order by c.CustomerID, o.orderID

select * from Products

select c.CustomerID, CompanyName, o.orderID, od.ProductID, ProductName
  from Customers as c join Orders as o on o.CustomerID = c.CustomerID
                      join [Order Details] as od on od.OrderID = o.OrderID
					  join Products as p on p.ProductID = od.ProductID
  order by c.CustomerID, o.orderID

select c.CustomerID, CompanyName, o.orderID, od.ProductID, ProductName
  from Customers as c join Orders as o on o.CustomerID = c.CustomerID
                      join [Order Details] as od on od.OrderID = o.OrderID
					  join Products as p on p.ProductID = od.ProductID
  order by c.CustomerID, o.orderID


select c.CustomerID, CompanyName, od.ProductID, ProductName
  from Customers as c join Orders as o on o.CustomerID = c.CustomerID
                      join [Order Details] as od on od.OrderID = o.OrderID
					  join Products as p on p.ProductID = od.ProductID
  order by c.CustomerID, od.ProductID


select distinct c.CustomerID, CompanyName, od.ProductID, ProductName
  from Customers as c join Orders as o on o.CustomerID = c.CustomerID
                      join [Order Details] as od on od.OrderID = o.OrderID
					  join Products as p on p.ProductID = od.ProductID
  order by c.CustomerID, od.ProductID


 --補充子查詢------------------------------------------------------------------
  use Northwind
go

-- 起
select * from Orders

-- 承
select OrderID, CustomerID, OrderDate
  from Orders

-- 轉
select OrderID, CustomerID, OrderDate
  from Orders
  where ???

select MAX(OrderDate) from Orders

-- 合
select OrderID, CustomerID, OrderDate
  from Orders
  where OrderDate = '1998-05-06'

select OrderID, CustomerID, OrderDate
  from Orders
  where OrderDate = (select ...)

select OrderID, CustomerID, OrderDate
  from Orders
  where OrderDate = (select MAX(OrderDate) from Orders)


